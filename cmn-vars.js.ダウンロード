/* ===================================================================
javascript information

File Name  : cmn-vars.js
Author     : 
script Info : 変数設定
=================================================================== */

;(function($){

// ===================================================================
// 
// DISP
// 
// ===================================================================

DISP = new myDisp();

function myDisp(){
	var disp = this;
	disp.ua = navigator.userAgent;
	resizeEvent = null;
	disp.browser = {};
	disp.os = {};
	disp.viewport = {};
	
	// [ browserData ]
	// -----------------------------------------------
	var browserData = [
		{ name: 'Edge',              group: 'Edge',     identifier: 'Edge/([0-9\.]*)',          versionIdentifier: 'Edge/([0-9\.]*)' },
		{ name: 'Chromium',          group: 'Chrome',   identifier: 'Chromium/([0-9\.]*)'       },
		{ name: 'Chrome Mobile',     group: 'Chrome',   identifier: 'Chrome/([0-9\.]*) Mobile', versionIdentifier: 'Chrome/([0-9\.]*)'},
		{ name: 'Chrome',            group: 'Chrome',   identifier: 'Chrome/([0-9\.]*)'         },
		{ name: 'Chrome for iOS',    group: 'Chrome',   identifier: 'CriOS/([0-9\.]*)'          },
		{ name: 'Android Browser',   group: 'Chrome',   identifier: 'CrMo/([0-9\.]*)'           },
		{ name: 'Firefox',           group: 'Firefox',  identifier: 'Firefox/([0-9\.]*)'        },
		{ name: 'Opera Mini',        group: 'Opera',    identifier: 'Opera Mini/([0-9\.]*)'     },
		{ name: 'Opera',             group: 'Opera',    identifier: 'Opera ([0-9\.]*)'          },
		{ name: 'Opera',             group: 'Opera',    identifier: 'Opera/([0-9\.]*)',         versionIdentifier: 'Version/([0-9\.]*)' },
		{ name: 'IEMobile',          group: 'Explorer', identifier: 'IEMobile/([0-9\.]*)'       },
		{ name: 'Internet Explorer', group: 'Explorer', identifier: 'MSIE ([a-zA-Z0-9\.]*)'     },
		{ name: 'Internet Explorer', group: 'Explorer', identifier: 'Trident/([0-9\.]*)',       versionIdentifier: 'rv:([0-9\.]*)' },
		{ name: 'Safari',            group: 'Safari',   identifier: 'Safari/([0-9\.]*)',        versionIdentifier: 'Version/([0-9\.]*)' }
	];
	
	// [ osData ]
	// -----------------------------------------------
	var osData = [
		{ name: 'Windows 2000',           group: 'Windows',       identifier: 'Windows NT 5.0',                     version: '5.0' },
		{ name: 'Windows XP',             group: 'Windows',       identifier: 'Windows NT 5.1',                     version: '5.1' },
		{ name: 'Windows Vista',          group: 'Windows',       identifier: 'Windows NT 6.0',                     version: '6.0' },
		{ name: 'Windows 7',              group: 'Windows',       identifier: 'Windows NT 6.1',                     version: '7.0' },
		{ name: 'Windows 8',              group: 'Windows',       identifier: 'Windows NT 6.2',                     version: '8.0' },
		{ name: 'Windows 8.1',            group: 'Windows',       identifier: 'Windows NT 6.3',                     version: '8.1' },
		{ name: 'Windows 10',             group: 'Windows',       identifier: 'Windows NT 10.0',                    version: '10.0' },
		{ name: 'Windows Phone',          group: 'Windows Phone', identifier: 'Windows Phone ([0-9\.]*)'            },
		{ name: 'Windows Phone',          group: 'Windows Phone', identifier: 'Windows Phone OS ([0-9\.]*)'         },
		{ name: 'Windows',                group: 'Windows',       identifier: 'Windows'                             },
		{ name: 'Chrome OS',              group: 'Chrome OS',     identifier: 'CrOS'                                },
		{ name: 'Android',                group: 'Android',       identifier: 'Android',                            versionIdentifier: 'Android ([a-zA-Z0-9\.-]*)' },
		{ name: 'iPad',                   group: 'iOS',           identifier: 'iPad',                               versionIdentifier: 'OS ([0-9_]*)', versionSeparator: '[_|\.]' },
		{ name: 'iPod',                   group: 'iOS',           identifier: 'iPod',                               versionIdentifier: 'OS ([0-9_]*)', versionSeparator: '[_|\.]' },
		{ name: 'iPhone',                 group: 'iOS',           identifier: 'iPhone OS',                          versionIdentifier: 'OS ([0-9_]*)', versionSeparator: '[_|\.]' },            
		{ name: 'Mac OS X El Capitan',    group: 'Mac OS',        identifier: 'Mac OS X (10([_|\.])11([0-9_\.]*))', versionSeparator: '[_|\.]' },
		{ name: 'Mac OS X Yosemite',      group: 'Mac OS',        identifier: 'Mac OS X (10([_|\.])10([0-9_\.]*))', versionSeparator: '[_|\.]' },
		{ name: 'Mac OS X Mavericks',     group: 'Mac OS',        identifier: 'Mac OS X (10([_|\.])9([0-9_\.]*))',  versionSeparator: '[_|\.]' },
		{ name: 'Mac OS X Mountain Lion', group: 'Mac OS',        identifier: 'Mac OS X (10([_|\.])8([0-9_\.]*))',  versionSeparator: '[_|\.]' },
		{ name: 'Mac OS X Lion',          group: 'Mac OS',        identifier: 'Mac OS X (10([_|\.])7([0-9_\.]*))',  versionSeparator: '[_|\.]' },
		{ name: 'Mac OS X Snow Leopard',  group: 'Mac OS',        identifier: 'Mac OS X (10([_|\.])6([0-9_\.]*))',  versionSeparator: '[_|\.]' },
		{ name: 'Mac OS X Leopard',       group: 'Mac OS',        identifier: 'Mac OS X (10([_|\.])5([0-9_\.]*))',  versionSeparator: '[_|\.]' },
		{ name: 'Mac OS X Tiger',         group: 'Mac OS',        identifier: 'Mac OS X (10([_|\.])4([0-9_\.]*))',  versionSeparator: '[_|\.]' },
		{ name: 'Mac OS X Panther',       group: 'Mac OS',        identifier: 'Mac OS X (10([_|\.])3([0-9_\.]*))',  versionSeparator: '[_|\.]' },
		{ name: 'Mac OS X Jaguar',        group: 'Mac OS',        identifier: 'Mac OS X (10([_|\.])2([0-9_\.]*))',  versionSeparator: '[_|\.]' },
		{ name: 'Mac OS X Puma',          group: 'Mac OS',        identifier: 'Mac OS X (10([_|\.])1([0-9_\.]*))',  versionSeparator: '[_|\.]' },
		{ name: 'Mac OS X Cheetah',       group: 'Mac OS',        identifier: 'Mac OS X (10([_|\.])0([0-9_\.]*))',  versionSeparator: '[_|\.]' },
		{ name: 'Mac OS',                 group: 'Mac OS',        identifier: 'Mac OS'                              },
		{ name: 'Ubuntu',                 group: 'Linux',         identifier: 'Ubuntu',                             versionIdentifier: 'Ubuntu/([0-9\.]*)' },
		{ name: 'Debian',                 group: 'Linux',         identifier: 'Debian'                              },
		{ name: 'Gentoo',                 group: 'Linux',         identifier: 'Gentoo'                              },
		{ name: 'Linux',                  group: 'Linux',         identifier: 'Linux'                               },
		{ name: 'BlackBerry',             group: 'BlackBerry',    identifier: 'BlackBerry'                          }
	];
	
	//  Set browser data
	var setBrowserData = function(){
		var userAgent = disp.ua.toLowerCase();

		// Check browser type
		for(i in browserData){
			var browserRegExp = new RegExp(browserData[i].identifier.toLowerCase());
			var browserRegExpResult = browserRegExp.exec(userAgent);

			if(browserRegExpResult != null && browserRegExpResult[1]){
				disp.browser.name = browserData[i].name;
				disp.browser.group = browserData[i].group;

				// Check version
				if(browserData[i].versionIdentifier){
					var versionRegExp = new RegExp(browserData[i].versionIdentifier.toLowerCase());
					var versionRegExpResult = versionRegExp.exec(userAgent);

					if(versionRegExpResult != null && versionRegExpResult[1]){
						setBrowserVersion(versionRegExpResult[1]);
					}
				}else{
					setBrowserVersion(browserRegExpResult[1]);
				}
				break;
			}
		}
		return true;
	};
	
	// Set browser version
	var setBrowserVersion = function(version){
		var splitVersion = version.split('.',2);
		disp.browser.version = version;

		// Major version
		if(splitVersion[0]){
			disp.browser.major_version = parseInt(splitVersion[0]);
		}
		// Minor version
		if(splitVersion[1]){
			disp.browser.minor_version = parseInt(splitVersion[1]);
		}
		return true;
	};
	
	//  Set OS data
	var setOsData = function(){
		var userAgent = disp.ua.toLowerCase();

		// Check browser type
		for(i in osData){
			var osRegExp = new RegExp(osData[i].identifier.toLowerCase());
			var osRegExpResult = osRegExp.exec(userAgent);

			if(osRegExpResult != null){
				disp.os.name = osData[i].name;
				disp.os.group = osData[i].group;

				// Version defined
				if(osData[i].version){
					setOsVersion(osData[i].version, (osData[i].versionSeparator) ? osData[i].versionSeparator:'.');
				// Version detected
				}else if(osRegExpResult[1]){
					setOsVersion(osRegExpResult[1], (osData[i].versionSeparator) ? osData[i].versionSeparator:'.');
				// Version identifier
				}else if (osData[i].versionIdentifier){
					var versionRegExp = new RegExp(osData[i].versionIdentifier.toLowerCase());
					var versionRegExpResult = versionRegExp.exec(userAgent);

					if(versionRegExpResult != null && versionRegExpResult[1]){
						setOsVersion(versionRegExpResult[1], (osData[i].versionSeparator) ? osData[i].versionSeparator:'.');
					}
				}
				break;
			}
		}
		return true;
	};

	// Set OS version
	var setOsVersion = function(version, separator){
		if(separator.substr(0, 1) == '['){
			var splitVersion = version.split(new RegExp(separator,'g'),2);
		}else{
			var splitVersion = version.split(separator,2);
		}

		if(separator != '.'){
			version = version.replace(new RegExp(separator,'g'),'.');
		}

		disp.os.version = version;

		// Major version
		if(splitVersion[0]){
			disp.os.major_version = parseInt(splitVersion[0]);
		}
		// Minor version
		if(splitVersion[1]){
			disp.os.minor_version = parseInt(splitVersion[1]);
		}
		return true;
	};
	
	// Set variable data [extend]
	var setVariableData = function(){
		disp.width = $(window).width();
		disp.height = $(window).height();
		disp.scrollTop = $(window).scrollTop();
		disp.scrollLeft = $(window).scrollLeft();
		disp.viewport.width = (window.innerWidth||document.documentElement.clientWidth||0);
		disp.viewport.height = (window.innerHeight||document.documentElement.clientHeight||0);
		
		if(typeof window.orientation == 'undefined'){
			if (disp.width >= disp.height){
				disp.orientation = 'landscape';
			} else {
				disp.orientation = 'portrait';
			}

		}else{
			switch(window.orientation){
				case -90:
				case 90:
					disp.orientation = 'landscape';
					break;
				default:
					disp.orientation = 'portrait';
					break; 
			}
		}
		return true;
	};
	
	// Set resize trigger
	var SetResizeTrigger = function(init){
		if(typeof init == 'undefined'){
			if(resizeEvent == null){
				$(window).trigger('resizeStart');
			}else{
				clearTimeout(resizeEvent);
			}

			resizeEvent = setTimeout(function(){
				$(window).trigger('resizeStop');
				clearTimeout(resizeEvent);
				resizeEvent = null;
			},300);
		} 
		return true;
	};
	
	// Set orientation trigger
	var setOrientationTrigger = function(){
		$(window).trigger('orientationChange');
		return true;
	};

	
	// Initialization
	setBrowserData();
	setOsData();
	setVariableData();
	SetResizeTrigger(true);
	setOrientationTrigger();
	
	// Triggers
	$(document).ready(function(e){
		setVariableData();
	});
	
	$(window).on('load',function(e){
		setVariableData();
	});
	
	$(window).on('resize',function(e){
		setVariableData();
		SetResizeTrigger();
	});
	
	$(window).on('scroll',function(e){
		setVariableData();
	});

	$(window).on('orientationchange',function(e){
		setVariableData();
		setOrientationTrigger();
	});
	
	return disp;
}

// ===================================================================
// 
// CHECK
// 
// ===================================================================

CHECK = new myCheck();

function myCheck(){
	var u = DISP.ua.toLowerCase();
	var check = this;
	
	// Set check shorthand
	var setCheckShorthand = function(){
		// os
		check.windows = DISP.os.group == 'Windows';
		check.windows_phone = DISP.os.group == 'Windows Phone';
		check.chrome_os = DISP.os.group == 'Chrome OS';
		check.android = DISP.os.group == 'Android';
		check.ios = DISP.os.group == 'iOS';
		check.mac = DISP.os.group == 'Mac OS';
		check.linux = DISP.os.group == 'Linux';
		check.blackberry = DISP.os.group == 'BlackBerry';
		
		// browser
		check.edge = DISP.browser.group == 'Edge';
		check.chrome = DISP.browser.group == 'Chrome' && DISP.browser.name != 'Android Browser';
		check.android_browser = DISP.browser.group == 'Chrome' && DISP.browser.name == 'Android Browser';
		check.firefox = DISP.browser.group == 'Firefox';
		check.ie = DISP.browser.name == 'Internet Explorer';
		check.ie_mobile = DISP.browser.name == 'IEMobile';
		check.opera = DISP.browser.group == 'Opera';
		check.safari = DISP.browser.group == 'Safari';
		
		// IE version
		check.ie6 = DISP.browser.name == 'Internet Explorer' && DISP.browser.major_version == 6;
		check.ie7 = DISP.browser.name == 'Internet Explorer' && DISP.browser.major_version == 7;
		check.ie8 = DISP.browser.name == 'Internet Explorer' && DISP.browser.major_version == 8;
		check.ie9 = DISP.browser.name == 'Internet Explorer' && DISP.browser.major_version == 9;
		check.ie10 = DISP.browser.name == 'Internet Explorer' && DISP.browser.major_version == 10;
		check.ie11 = DISP.browser.name == 'Internet Explorer' && DISP.browser.major_version == 11;
		
		// platform
		check.mobile = (u.indexOf('windows') != -1 && u.indexOf('phone') != -1) || u.indexOf('iphone') != -1 || u.indexOf('ipod') != -1 || (u.indexOf('android') != -1 && u.indexOf('mobile') != -1) || (u.indexOf('firefox') != -1 && u.indexOf('mobile') != -1) || u.indexOf('blackberry') != -1;
		
		check.tablet = (u.indexOf('windows') != -1 && u.indexOf('touch') != -1 && u.indexOf('tablet pc') == -1) || u.indexOf('ipad') != -1 || (u.indexOf('android') != -1 && u.indexOf('mobile') == -1) || (u.indexOf('firefox') != -1 && u.indexOf('tablet') != -1) || u.indexOf('kindle') != -1 || u.indexOf('silk') != -1 || u.indexOf('playbook') != -1;
		
		check.pc = !check.mobile && !check.tablet;
		
		return true;
	};
	
	// Initialization
	setCheckShorthand();
	
	return check;
}
	
})(window.jQuery);